name: 'Personal Website Deploy'
on:
  push: 
    tags:
      - v*
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v1
        with: 
          submodules: true
          token: ${{ secrets.GITHUB_REPO_TOKEN }}
      - name: Run Node
        uses: actions/setup-node@v1
        with:
          node-version: '9.8.0'
      - run: npm install
        working-directory: ./modules/fe-personal-site
      - run: npm run build
        working-directory: ./modules/fe-personal-site
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_actions_version: 0.11.13
          tf_actions_subcommand: 'init'
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_actions_version: 0.11.13
          tf_actions_subcommand: 'validate'
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_actions_version: 0.11.13
          tf_actions_subcommand: 'plan'
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_actions_version: 0.11.13
          tf_actions_subcommand: 'apply'
      - name: 'Upload new assets to s3'
        # uses: docker://amazon/aws-cli:2.0.7
        # All commands after this point have access to the AWS CLI
        #TODO: Need to automate getting. bucket id.
        # Also could split this into different parts since s3 upload only needed for submodule update.
      - run: aws s3 sync ./dist s3://s3-bucket-maxwell-demon --cache-control 'max-age=31536000' --exclude "*.html"
        working-directory: ./modules/fe-personal-site
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: aws s3 sync ./dist s3://s3-bucket-maxwell-demon --cache-control 'no-cache'
        working-directory: ./modules/fe-personal-site
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # TODO: Consider removing this since html to longer cached and goes directly to s3.
      - run: aws cloudfront create-invalidation --distribution-id $PERSONAL_SITE_CF_ID --paths "/*"
        working-directory: ./modules/fe-personal-site
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PERSONAL_SITE_CF_ID: ${{ secrets.PERSONAL_SITE_CF_ID }}